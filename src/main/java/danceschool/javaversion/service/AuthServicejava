import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseAuthException;
import com.google.firebase.auth.FirebaseToken;

import io.thepro.apiservice.security.models.Credentials;
import io.thepro.apiservice.security.models.Credentials.CredentialType;
import io.thepro.apiservice.security.models.SecurityProperties;
import io.thepro.apiservice.security.models.User;
import io.thepro.apiservice.security.roles.RoleConstants;
import io.thepro.apiservice.security.roles.RoleService;
import lombok.extern.slf4j.Slf4j;

public class AuthService {

    public String getRoleFromToken(String token){
        try {
        FirebaseToken decodedToken  = firebaseAuth.verifyIdToken(token);
    } catch (FirebaseAuthException e) {
        log.error("Firebase Exception:: ", e.getLocalizedMessage());
    }
    }
    if (decodedToken.getClaims().containsKey("admin")) {
        return "admin";
    }
    if(decodedToken.getClaims().containsKey("student")){
        return "student";
    }
    return "";
}